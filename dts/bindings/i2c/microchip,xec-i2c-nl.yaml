# Copyright (c) 2022 Microchip Technology Inc.
# SPDX-License-Identifier: Apache-2.0

description: Microchip I2C/SMB with Network Layer controller

compatible: "microchip,xec-i2c-nl"

include: [i2c-controller.yaml, pinctrl-device.yaml, pm.yaml]

properties:
  reg:
    required: true

  interrupts:
    required: true

  clocks:
    required: true

  pinctrl-0:
    required: false

  pinctrl-names:
    required: false

  port_sel:
    type: int
    description: soc block mapping to pin
    required: true

  girqs:
    type: array
    required: true
    description: array of GIRQ numbers [8:26] and bit positions [0:31]

  dmas:
    required: true
    description: |
      Optional TX & RX dma specifiers.  Each specifier will have a phandle
      reference to the dmac controller, the channel number, and peripheral
      trigger source.

      For example dmas using DMA channels 2 and 3 for controller/device modes on I2C01
       dmas = <&dmac 2 0x3>, <&dmac 3 0x2>;

  dma-names:
    required: true
    description: |
      Required if the dmas property exists.  This should be "ctr" and "dev"
      to match the dmas property.

      For example
         dma-names = "ctr", "dev";

  sda-gpios:
    type: phandle-array
    required: true
    description: |
      I2C data line gpio info

  scl-gpios:
    type: phandle-array
    required: true
    description: |
      I2C clock line gpio info

  init-pin-wait:
    type: int
    description: |
      Amount of time in microseconds allowing the controller to sample
      pins during driver initialization. If not present default is 100.

  config-pin-wait:
    type: int
    description: |
      Amount of time in microseconds allowing the controller to sample
      pins after controller is enabled during configuration. If not
      present the default is 35000 (the SMBus bus timeout).

  target-addrs:
    type: array
    description: |
      Array of two 7-bit target addresses this controller can respond to.
      If not present the controller defaults to 0 for both addresses.

  wake-pll-ecia-info:
    type: int
    description: |
      Encoded GIRQ number and bit position for PLL only wake. In deep
      sleep state where PLL is off, the I2C controller can wake the PLL
      in response to an external START. If the address is not a match
      for the controller, hardware will allow the PLL to go off an no
      and I2C re-enters deep sleep. If the incoming address matches the
      controller will assert its I2C interrupt and wake the chip.

  "#girq-cells":
    type: int
    const: 2

girq-cells:
  - girq_num
  - bitpos
